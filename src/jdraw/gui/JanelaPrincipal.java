/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jdraw.gui;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.ListIterator;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import jdraw.geom.Curva;
import jdraw.geom.Elipse;
import jdraw.geom.Estrela;
import jdraw.geom.Forma;
import jdraw.geom.Linha;
import jdraw.geom.Poligono;
import jdraw.geom.Retangulo;
import jdraw.geom.RetanguloArredondado;

/**
 *
 * @author David
 */
public class JanelaPrincipal extends javax.swing.JFrame {

    private Color corTraco;
    private Color corPreenchimento;
    private Color corFundo;
    
    private boolean desenhando;
    private Forma formaAtual;
    private Forma formaSelecionada;
    
    private int xPressed;
    private int yPressed;
    
    // posição anterior ao ciclo de arraste
    private double xAnt;
    private double yAnt;
    
    private final PainelDesenho painelD;
    private final PainelCor painelCorTracoC;
    private final PainelCor painelCorPreenchimentoC;
    
    /**
     * Creates new form JanelaPrincipal
     */
    public JanelaPrincipal() {
        
        initComponents();
        painelD = (PainelDesenho) painel;
        painelD.setCursor( Cursores.getCursor( Cursores.Tipo.CRUZ ) );
        
        painelCorTracoC = (PainelCor) painelCorTraco;
        painelCorPreenchimentoC = (PainelCor) painelCorPreenchimento;
        
        corTraco = Color.BLACK;
        corPreenchimento = Color.WHITE;
        corFundo = Color.WHITE;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        btnGroup = new javax.swing.ButtonGroup();
        toolBar = new javax.swing.JToolBar();
        btnSalvar = new javax.swing.JButton();
        sep0 = new javax.swing.JToolBar.Separator();
        btnDesfazer = new javax.swing.JButton();
        btnRefazer = new javax.swing.JButton();
        sep1 = new javax.swing.JToolBar.Separator();
        btnMover = new javax.swing.JToggleButton();
        sep2 = new javax.swing.JToolBar.Separator();
        btnLapis = new javax.swing.JToggleButton();
        sep3 = new javax.swing.JToolBar.Separator();
        btnLinha = new javax.swing.JToggleButton();
        sep4 = new javax.swing.JToolBar.Separator();
        btnRetangulo = new javax.swing.JToggleButton();
        btnRetanguloArredondado = new javax.swing.JToggleButton();
        sep5 = new javax.swing.JToolBar.Separator();
        btnElipse = new javax.swing.JToggleButton();
        sep6 = new javax.swing.JToolBar.Separator();
        btnPoligono = new javax.swing.JToggleButton();
        btnEstrela = new javax.swing.JToggleButton();
        sep7 = new javax.swing.JToolBar.Separator();
        btnBaldePreenchimento = new javax.swing.JToggleButton();
        sep8 = new javax.swing.JToolBar.Separator();
        painelCorTraco = new PainelCor();
        chkSemCorTraco = new javax.swing.JCheckBox();
        sep9 = new javax.swing.JPanel();
        painelCorPreenchimento = new PainelCor();
        chkSemCorPreenchimento = new javax.swing.JCheckBox();
        sep10 = new javax.swing.JPanel();
        painelCorFundo = new javax.swing.JPanel();
        painel = new PainelDesenho();
        painelPropriedades = new javax.swing.JPanel();
        painelPropriedadesEspessura = new javax.swing.JPanel();
        lblEspessuraPE = new javax.swing.JLabel();
        txtEspessuraPE = new IntegerJTextField();
        painelPropriedadesEspessuraArco = new javax.swing.JPanel();
        lblEspessuraPEA = new javax.swing.JLabel();
        txtEspessuraPEA = new IntegerJTextField();
        lblArcoPEA = new javax.swing.JLabel();
        txtArcoPEA = new IntegerJTextField();
        painelPropriedadesEspessuraLados = new javax.swing.JPanel();
        lblEspessuraPEL = new javax.swing.JLabel();
        txtEspessuraPEL = new IntegerJTextField();
        lblLadosPEL = new javax.swing.JLabel();
        txtLadosPEL = new IntegerJTextField();
        painelPropriedadesVazio = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JDraw - Especialização DDM - Prof. David Buzatto");

        toolBar.setFloatable(false);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdraw/gui/icones/disk.png"))); // NOI18N
        btnSalvar.setFocusable(false);
        btnSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        toolBar.add(btnSalvar);
        toolBar.add(sep0);

        btnDesfazer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdraw/gui/icones/arrow_left.png"))); // NOI18N
        btnDesfazer.setEnabled(false);
        btnDesfazer.setFocusable(false);
        btnDesfazer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDesfazer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDesfazer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesfazerActionPerformed(evt);
            }
        });
        toolBar.add(btnDesfazer);

        btnRefazer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdraw/gui/icones/arrow_right.png"))); // NOI18N
        btnRefazer.setEnabled(false);
        btnRefazer.setFocusable(false);
        btnRefazer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRefazer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRefazer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefazerActionPerformed(evt);
            }
        });
        toolBar.add(btnRefazer);
        toolBar.add(sep1);

        btnGroup.add(btnMover);
        btnMover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdraw/gui/icones/cursor-openhand.png"))); // NOI18N
        btnMover.setFocusable(false);
        btnMover.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMover.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoverActionPerformed(evt);
            }
        });
        toolBar.add(btnMover);
        toolBar.add(sep2);

        btnGroup.add(btnLapis);
        btnLapis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdraw/gui/icones/lapis.png"))); // NOI18N
        btnLapis.setFocusable(false);
        btnLapis.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLapis.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLapis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLapisActionPerformed(evt);
            }
        });
        toolBar.add(btnLapis);
        toolBar.add(sep3);

        btnGroup.add(btnLinha);
        btnLinha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdraw/gui/icones/linha.png"))); // NOI18N
        btnLinha.setSelected(true);
        btnLinha.setFocusable(false);
        btnLinha.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLinha.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLinhaActionPerformed(evt);
            }
        });
        toolBar.add(btnLinha);
        toolBar.add(sep4);

        btnGroup.add(btnRetangulo);
        btnRetangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdraw/gui/icones/retangulo.png"))); // NOI18N
        btnRetangulo.setFocusable(false);
        btnRetangulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRetangulo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRetangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetanguloActionPerformed(evt);
            }
        });
        toolBar.add(btnRetangulo);

        btnGroup.add(btnRetanguloArredondado);
        btnRetanguloArredondado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdraw/gui/icones/retanguloArredondado.png"))); // NOI18N
        btnRetanguloArredondado.setFocusable(false);
        btnRetanguloArredondado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRetanguloArredondado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRetanguloArredondado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetanguloArredondadoActionPerformed(evt);
            }
        });
        toolBar.add(btnRetanguloArredondado);
        toolBar.add(sep5);

        btnGroup.add(btnElipse);
        btnElipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdraw/gui/icones/elipse.png"))); // NOI18N
        btnElipse.setFocusable(false);
        btnElipse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnElipse.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnElipse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElipseActionPerformed(evt);
            }
        });
        toolBar.add(btnElipse);
        toolBar.add(sep6);

        btnGroup.add(btnPoligono);
        btnPoligono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdraw/gui/icones/poligono.png"))); // NOI18N
        btnPoligono.setFocusable(false);
        btnPoligono.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPoligono.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPoligono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPoligonoActionPerformed(evt);
            }
        });
        toolBar.add(btnPoligono);

        btnGroup.add(btnEstrela);
        btnEstrela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdraw/gui/icones/estrela.png"))); // NOI18N
        btnEstrela.setFocusable(false);
        btnEstrela.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEstrela.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEstrela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstrelaActionPerformed(evt);
            }
        });
        toolBar.add(btnEstrela);
        toolBar.add(sep7);

        btnGroup.add(btnBaldePreenchimento);
        btnBaldePreenchimento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdraw/gui/icones/balde.png"))); // NOI18N
        btnBaldePreenchimento.setFocusable(false);
        btnBaldePreenchimento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBaldePreenchimento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBaldePreenchimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaldePreenchimentoActionPerformed(evt);
            }
        });
        toolBar.add(btnBaldePreenchimento);
        toolBar.add(sep8);

        painelCorTraco.setBackground(new java.awt.Color(0, 0, 0));
        painelCorTraco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        painelCorTraco.setToolTipText("Cor do traço");
        painelCorTraco.setMaximumSize(new java.awt.Dimension(16, 16));
        painelCorTraco.setMinimumSize(new java.awt.Dimension(16, 16));
        painelCorTraco.setPreferredSize(new java.awt.Dimension(16, 16));
        painelCorTraco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                painelCorTracoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout painelCorTracoLayout = new javax.swing.GroupLayout(painelCorTraco);
        painelCorTraco.setLayout(painelCorTracoLayout);
        painelCorTracoLayout.setHorizontalGroup(
            painelCorTracoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        painelCorTracoLayout.setVerticalGroup(
            painelCorTracoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        toolBar.add(painelCorTraco);

        chkSemCorTraco.setSelected(true);
        chkSemCorTraco.setFocusable(false);
        chkSemCorTraco.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        chkSemCorTraco.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        chkSemCorTraco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSemCorTracoActionPerformed(evt);
            }
        });
        toolBar.add(chkSemCorTraco);

        sep9.setMaximumSize(new java.awt.Dimension(8, 16));
        sep9.setMinimumSize(new java.awt.Dimension(8, 16));

        javax.swing.GroupLayout sep9Layout = new javax.swing.GroupLayout(sep9);
        sep9.setLayout(sep9Layout);
        sep9Layout.setHorizontalGroup(
            sep9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        sep9Layout.setVerticalGroup(
            sep9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        toolBar.add(sep9);

        painelCorPreenchimento.setBackground(new java.awt.Color(255, 255, 255));
        painelCorPreenchimento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        painelCorPreenchimento.setToolTipText("Cor do preenchimento");
        painelCorPreenchimento.setMaximumSize(new java.awt.Dimension(16, 16));
        painelCorPreenchimento.setMinimumSize(new java.awt.Dimension(16, 16));
        painelCorPreenchimento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                painelCorPreenchimentoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout painelCorPreenchimentoLayout = new javax.swing.GroupLayout(painelCorPreenchimento);
        painelCorPreenchimento.setLayout(painelCorPreenchimentoLayout);
        painelCorPreenchimentoLayout.setHorizontalGroup(
            painelCorPreenchimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        painelCorPreenchimentoLayout.setVerticalGroup(
            painelCorPreenchimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        toolBar.add(painelCorPreenchimento);

        chkSemCorPreenchimento.setSelected(true);
        chkSemCorPreenchimento.setFocusable(false);
        chkSemCorPreenchimento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        chkSemCorPreenchimento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        chkSemCorPreenchimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSemCorPreenchimentoActionPerformed(evt);
            }
        });
        toolBar.add(chkSemCorPreenchimento);

        sep10.setMaximumSize(new java.awt.Dimension(8, 16));
        sep10.setMinimumSize(new java.awt.Dimension(8, 16));

        javax.swing.GroupLayout sep10Layout = new javax.swing.GroupLayout(sep10);
        sep10.setLayout(sep10Layout);
        sep10Layout.setHorizontalGroup(
            sep10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        sep10Layout.setVerticalGroup(
            sep10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        toolBar.add(sep10);

        painelCorFundo.setBackground(new java.awt.Color(255, 255, 255));
        painelCorFundo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        painelCorFundo.setToolTipText("Cor do fundo");
        painelCorFundo.setMaximumSize(new java.awt.Dimension(16, 16));
        painelCorFundo.setMinimumSize(new java.awt.Dimension(16, 16));
        painelCorFundo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                painelCorFundoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout painelCorFundoLayout = new javax.swing.GroupLayout(painelCorFundo);
        painelCorFundo.setLayout(painelCorFundoLayout);
        painelCorFundoLayout.setHorizontalGroup(
            painelCorFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        painelCorFundoLayout.setVerticalGroup(
            painelCorFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        toolBar.add(painelCorFundo);

        painel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        painel.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        painel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                painelMouseDragged(evt);
            }
        });
        painel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                painelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                painelMouseReleased(evt);
            }
        });

        painelPropriedades.setBorder(javax.swing.BorderFactory.createTitledBorder("Propriedades"));
        painelPropriedades.setLayout(new java.awt.CardLayout());

        painelPropriedadesEspessura.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        lblEspessuraPE.setText("Espessura:");
        painelPropriedadesEspessura.add(lblEspessuraPE);

        txtEspessuraPE.setColumns(3);
        txtEspessuraPE.setText("1");
        painelPropriedadesEspessura.add(txtEspessuraPE);

        painelPropriedades.add(painelPropriedadesEspessura, "propriedadesPE");

        painelPropriedadesEspessuraArco.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        lblEspessuraPEA.setText("Espessura:");
        painelPropriedadesEspessuraArco.add(lblEspessuraPEA);

        txtEspessuraPEA.setColumns(3);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, txtEspessuraPE, org.jdesktop.beansbinding.ELProperty.create("${text}"), txtEspessuraPEA, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        painelPropriedadesEspessuraArco.add(txtEspessuraPEA);

        lblArcoPEA.setText("Arco:");
        painelPropriedadesEspessuraArco.add(lblArcoPEA);

        txtArcoPEA.setColumns(3);
        txtArcoPEA.setText("20");
        painelPropriedadesEspessuraArco.add(txtArcoPEA);

        painelPropriedades.add(painelPropriedadesEspessuraArco, "propriedadesPEA");

        painelPropriedadesEspessuraLados.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        lblEspessuraPEL.setText("Espessura:");
        painelPropriedadesEspessuraLados.add(lblEspessuraPEL);

        txtEspessuraPEL.setColumns(3);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, txtEspessuraPE, org.jdesktop.beansbinding.ELProperty.create("${text}"), txtEspessuraPEL, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        painelPropriedadesEspessuraLados.add(txtEspessuraPEL);

        lblLadosPEL.setText("Lados:");
        painelPropriedadesEspessuraLados.add(lblLadosPEL);

        txtLadosPEL.setColumns(3);
        txtLadosPEL.setText("5");
        painelPropriedadesEspessuraLados.add(txtLadosPEL);

        painelPropriedades.add(painelPropriedadesEspessuraLados, "propriedadesPEL");

        painelPropriedadesVazio.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        painelPropriedades.add(painelPropriedadesVazio, "propriedadesPV");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelPropriedades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelPropriedades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        setSize(new java.awt.Dimension(701, 498));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLinhaActionPerformed
        
        alterarPainelPropriedades( "propriedadesPE" );
        painelD.setCursor( Cursores.getCursor( Cursores.Tipo.CRUZ ) );
        
        
    }//GEN-LAST:event_btnLinhaActionPerformed

    private void btnRetanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetanguloActionPerformed
        
        alterarPainelPropriedades( "propriedadesPE" );
        painelD.setCursor( Cursores.getCursor( Cursores.Tipo.CRUZ ) );
        
    }//GEN-LAST:event_btnRetanguloActionPerformed

    private void btnRetanguloArredondadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetanguloArredondadoActionPerformed
        
        alterarPainelPropriedades( "propriedadesPEA" );
        painelD.setCursor( Cursores.getCursor( Cursores.Tipo.CRUZ ) );
        
    }//GEN-LAST:event_btnRetanguloArredondadoActionPerformed

    private void btnElipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElipseActionPerformed
        
        alterarPainelPropriedades( "propriedadesPE" );
        painelD.setCursor( Cursores.getCursor( Cursores.Tipo.CRUZ ) );
        
    }//GEN-LAST:event_btnElipseActionPerformed

    private void btnPoligonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPoligonoActionPerformed
        
        alterarPainelPropriedades( "propriedadesPEL" );
        painelD.setCursor( Cursores.getCursor( Cursores.Tipo.CRUZ ) );
        
    }//GEN-LAST:event_btnPoligonoActionPerformed

    private void btnEstrelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstrelaActionPerformed
        
        alterarPainelPropriedades( "propriedadesPEL" );
        painelD.setCursor( Cursores.getCursor( Cursores.Tipo.CRUZ ) );
        
    }//GEN-LAST:event_btnEstrelaActionPerformed

    private void painelCorTracoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelCorTracoMouseClicked
        
        if ( chkSemCorTraco.isSelected() ) {
            
            Color cor = JColorChooser.showDialog( this, "Cor do Traço", corTraco );

            if ( cor != null ) {
                corTraco = cor;
                painelCorTraco.setBackground( corTraco );
            }
            
        }
        
    }//GEN-LAST:event_painelCorTracoMouseClicked

    private void painelCorPreenchimentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelCorPreenchimentoMouseClicked
        
        if ( chkSemCorPreenchimento.isSelected() ) {
        
            Color cor = JColorChooser.showDialog( this, "Cor do Preenchimento", corPreenchimento );
        
            if ( cor != null ) {
                corPreenchimento = cor;
                painelCorPreenchimento.setBackground( corPreenchimento );
            }
        
        }
        
    }//GEN-LAST:event_painelCorPreenchimentoMouseClicked

    private void painelCorFundoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelCorFundoMouseClicked
        
        Color cor = JColorChooser.showDialog( this, "Cor do Fundo", corFundo );
        
        if ( cor != null ) {
            corFundo = cor;
            painelCorFundo.setBackground( corFundo );
        }
        
        painelD.setCorFundo( corFundo );
        painelD.repaint();
        
    }//GEN-LAST:event_painelCorFundoMouseClicked

    private void painelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelMousePressed
        
        xPressed = evt.getX();
        yPressed = evt.getY();
        
        // verificando se houve interceptação
        List<Forma> formas = painelD.getFormas();
        ListIterator<Forma> li = formas.listIterator( formas.size() );
        
        while ( li.hasPrevious() ) {
            
            Forma forma = li.previous();
            
            if ( forma.intercepta( xPressed, yPressed ) ) {
                formaSelecionada = forma;
                break;
            }

        }
        
        if ( btnMover.isSelected() ) {
            
            if ( formaSelecionada != null ) {
                xAnt = xPressed;
                yAnt = yPressed;
            }
            
        } else if ( btnBaldePreenchimento.isSelected() ) {
            
            if ( formaSelecionada != null ) {
                formaSelecionada.setCorTraco( corTraco );
                formaSelecionada.setCorPreenchimento( corPreenchimento );
                formaSelecionada.setEspessuraTraco( Double.parseDouble( txtEspessuraPE.getText() ) );
            }
            
        } else {
            
            if ( btnLapis.isSelected() ) {
                if ( formaAtual == null ) {
                    Curva c = new Curva();
                    c.adicionarX( xPressed );
                    c.adicionarY( yPressed );
                    formaAtual = c;
                }
            }
            
            desenhando = true;
        }
        
        painelD.repaint();
        
    }//GEN-LAST:event_painelMousePressed

    private void painelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelMouseReleased
        
        desenhando = false;
        formaSelecionada = null;
        
        if ( formaAtual != null ) {

            painelD.setFormaTemporaria( null );
            painelD.adicionarForma( formaAtual );
            painelD.repaint();

            formaAtual = null;
            
        }
        
        verificarHistorico();
        
    }//GEN-LAST:event_painelMouseReleased

    private void painelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelMouseDragged
        
        if ( desenhando ) {
            
            if ( btnLapis.isSelected() ) {
                
                Curva curva;
                
                if ( formaAtual != null && formaAtual instanceof Curva ) {
                    curva = (Curva) formaAtual;
                } else {
                    curva = new Curva();
                }
                
                curva.setCorTraco( corTraco );
                curva.setCorPreenchimento( corPreenchimento );
                
                curva.setEspessuraTraco( Double.parseDouble( txtEspessuraPE.getText() ) );
                
                curva.adicionarX( evt.getX() );
                curva.adicionarY( evt.getY() );
                
                formaAtual = curva;
                
            } else if ( btnLinha.isSelected() ) {
                
                Linha linha = new Linha();
                
                linha.setCorTraco( corTraco );
                
                linha.setEspessuraTraco( Double.parseDouble( txtEspessuraPE.getText() ) );
                linha.setXIni( xPressed );
                linha.setYIni( yPressed );
                linha.setXFim( evt.getX() );
                linha.setYFim( evt.getY() );
                
                formaAtual = linha;
                
            } else if ( btnRetangulo.isSelected() ) {
                
                Retangulo retangulo = new Retangulo();
                
                retangulo.setCorTraco( corTraco );
                retangulo.setCorPreenchimento( corPreenchimento );
                
                retangulo.setEspessuraTraco( Double.parseDouble( txtEspessuraPE.getText() ) );
                
                if ( xPressed < evt.getX() ) {
                    retangulo.setXIni( xPressed );
                    retangulo.setXFim( evt.getX() );
                } else {
                    retangulo.setXIni( evt.getX() );
                    retangulo.setXFim( xPressed );
                }
                
                if ( yPressed < evt.getY() ) {
                    retangulo.setYIni( yPressed );
                    retangulo.setYFim( evt.getY() );
                } else {
                    retangulo.setYIni( evt.getY() );
                    retangulo.setYFim( yPressed );
                }
                
                formaAtual = retangulo;
                
            } else if ( btnRetanguloArredondado.isSelected() ) {
                
                RetanguloArredondado retangulo = new RetanguloArredondado();
                
                retangulo.setCorTraco( corTraco );
                retangulo.setCorPreenchimento( corPreenchimento );
                
                retangulo.setEspessuraTraco( Double.parseDouble( txtEspessuraPEA.getText() ) );
                retangulo.setArco( Double.parseDouble( txtArcoPEA.getText() ) );
                
                if ( xPressed < evt.getX() ) {
                    retangulo.setXIni( xPressed );
                    retangulo.setXFim( evt.getX() );
                } else {
                    retangulo.setXIni( evt.getX() );
                    retangulo.setXFim( xPressed );
                }
                
                if ( yPressed < evt.getY() ) {
                    retangulo.setYIni( yPressed );
                    retangulo.setYFim( evt.getY() );
                } else {
                    retangulo.setYIni( evt.getY() );
                    retangulo.setYFim( yPressed );
                }
                
                formaAtual = retangulo;
                
            } else if ( btnElipse.isSelected() ) {
                
                Elipse elipse = new Elipse();
                
                elipse.setCorTraco( corTraco );
                elipse.setCorPreenchimento( corPreenchimento );
                
                elipse.setEspessuraTraco( Double.parseDouble( txtEspessuraPE.getText() ) );
                
                if ( xPressed < evt.getX() ) {
                    elipse.setXIni( xPressed );
                    elipse.setXFim( evt.getX() );
                } else {
                    elipse.setXIni( evt.getX() );
                    elipse.setXFim( xPressed );
                }
                
                if ( yPressed < evt.getY() ) {
                    elipse.setYIni( yPressed );
                    elipse.setYFim( evt.getY() );
                } else {
                    elipse.setYIni( evt.getY() );
                    elipse.setYFim( yPressed );
                }
                
                formaAtual = elipse;
                
            } else if ( btnPoligono.isSelected() ) {
                
                Poligono poligono = new Poligono();
                
                poligono.setCorTraco( corTraco );
                poligono.setCorPreenchimento( corPreenchimento );
                
                poligono.setEspessuraTraco( Double.parseDouble( txtEspessuraPEL.getText() ) );
                poligono.setQuantidadeLados( Integer.parseInt( txtLadosPEL.getText() ) );
                
                // cateto adjacente
                double c1 = evt.getX() - xPressed;
                
                // cateto oposto
                double c2 = evt.getY() - yPressed;
                
                poligono.setRaio( Math.sqrt( c1*c1 + c2*c2 ) );
                poligono.setXCentro( xPressed );
                poligono.setYCentro( yPressed );
                
                // atan2 retorna o sinal correto com base no quadrante
                poligono.setAngulo( Math.toDegrees( Math.atan2( c2, c1 ) ) );
                
                // gera o ângulo, mas sem definir o quadrante (cresce de 0 a 180 em duas meia lua)
                //System.out.println( Math.toDegrees( Math.acos( c1/Math.sqrt( c1*c1 + c2*c2 ) ) ) );
                
                // gera o ângulo, mas sem definir o quadrante (cresce de -90 a 90 em duas meia lua)
                //System.out.println( Math.toDegrees( Math.asin( c2/Math.sqrt( c1*c1 + c2*c2 ) ) ) );
                
                // gera o ângulo, mas sem definir o quadrante (cresce de -90 a 90 em duas meia lua)
                //System.out.println( Math.toDegrees( Math.atan( c2/c1 ) ) );
                
                formaAtual = poligono;
                
            } else if ( btnEstrela.isSelected() ) {
                
                Estrela estrela = new Estrela();
                
                estrela.setCorTraco( corTraco );
                estrela.setCorPreenchimento( corPreenchimento );
                
                estrela.setEspessuraTraco( Double.parseDouble( txtEspessuraPEL.getText() ) );
                estrela.setQuantidadeLados( Integer.parseInt( txtLadosPEL.getText() ) );
                
                double c1 = evt.getX() - xPressed;
                double c2 = evt.getY() - yPressed;
                
                estrela.setRaio( Math.sqrt( c1*c1 + c2*c2 ) );
                estrela.setXCentro( xPressed );
                estrela.setYCentro( yPressed );
                
                estrela.setAngulo( Math.toDegrees( Math.atan2( c2, c1 ) ) );
                
                formaAtual = estrela;
                
            }
            
            painelD.setFormaTemporaria( formaAtual );
            painelD.repaint();
            
        } else if ( btnMover.isSelected() && formaSelecionada != null ) {
            
            // movimenta com base na posição de clique inicial e posição anterior
            
            formaSelecionada.mover( evt.getX() - xAnt, evt.getY() - yAnt );
            
            xAnt = evt.getX();
            yAnt = evt.getY();
            
            painelD.repaint();
            
        }
        
    }//GEN-LAST:event_painelMouseDragged

    private void chkSemCorTracoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSemCorTracoActionPerformed
        
        if ( chkSemCorTraco.isSelected() ) {
            corTraco = painelCorTraco.getBackground();
            painelCorTracoC.setSemCor( false );
        } else {
            corTraco = null;
            painelCorTracoC.setSemCor( true );
        }
        
        painelCorTracoC.repaint();
        
    }//GEN-LAST:event_chkSemCorTracoActionPerformed

    private void chkSemCorPreenchimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSemCorPreenchimentoActionPerformed
        
        if ( chkSemCorPreenchimento.isSelected() ) {
            corPreenchimento = painelCorPreenchimento.getBackground();
            painelCorPreenchimentoC.setSemCor( false );
        } else {
            corPreenchimento = null;
            painelCorPreenchimentoC.setSemCor( true );
        }
        
        painelCorPreenchimentoC.repaint();
        
    }//GEN-LAST:event_chkSemCorPreenchimentoActionPerformed

    private void btnDesfazerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesfazerActionPerformed
        
        if ( painelD.possivelDesfazer() ) {
            painelD.desfazer();
            painelD.repaint();
        }
        
        verificarHistorico();
        
    }//GEN-LAST:event_btnDesfazerActionPerformed

    private void btnRefazerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefazerActionPerformed
        
        if ( painelD.possivelRefazer() ) {
            painelD.refazer();
            painelD.repaint();
        }
        
        verificarHistorico();
        
    }//GEN-LAST:event_btnRefazerActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter fnef = new FileNameExtensionFilter( 
                "Imagem PNG (*.png)", "png" );

        for ( FileFilter f : jfc.getChoosableFileFilters() ) {
            jfc.removeChoosableFileFilter( f );
        }

        jfc.setFileFilter( fnef );
        jfc.setDialogTitle( "Salvar..." );
        jfc.setFileSelectionMode( JFileChooser.FILES_ONLY );
        jfc.setMultiSelectionEnabled( false );

        if ( jfc.showSaveDialog( this ) == JFileChooser.APPROVE_OPTION ) {

            File f = jfc.getSelectedFile();

            if ( f.getName().lastIndexOf( ".png" ) == -1 ) {
                f = new File( f.getAbsolutePath() + ".png" );
            }

            if ( !f.exists() || 
                    ( f.exists() && JOptionPane.showConfirmDialog( 
                      this, "O arquivo já existe! Deseja sobrescrevê-lo?", "Aviso", 
                      JOptionPane.OK_CANCEL_OPTION ) == JOptionPane.OK_OPTION ) ) {

                BufferedImage im = new BufferedImage( 
                        painelD.getWidth(), 
                        painelD.getHeight(), 
                        BufferedImage.TYPE_INT_RGB );
                
                painelD.desenhar( im.getGraphics() );

                try {
                    ImageIO.write( im, "png", f );
                } catch ( IOException exc ) {
                    exc.printStackTrace();
                }

            }

        }
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnMoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoverActionPerformed
        
        alterarPainelPropriedades( "propriedadesPV" );
        painelD.setCursor( Cursores.getCursor( Cursores.Tipo.MOVER ) );
        
    }//GEN-LAST:event_btnMoverActionPerformed

    private void btnBaldePreenchimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaldePreenchimentoActionPerformed
        
        alterarPainelPropriedades( "propriedadesPE" );
        painelD.setCursor( Cursores.getCursor(Cursores.Tipo.BALDE ) );
        
    }//GEN-LAST:event_btnBaldePreenchimentoActionPerformed

    private void btnLapisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLapisActionPerformed
        
        alterarPainelPropriedades( "propriedadesPE" );
        painelD.setCursor( Cursores.getCursor( Cursores.Tipo.LAPIS ) );
        
    }//GEN-LAST:event_btnLapisActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] ) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() ) {
                if ( "Nimbus".equals( info.getName() ) ) {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        } catch ( ClassNotFoundException ex ) {
            java.util.logging.Logger.getLogger( JanelaPrincipal.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( InstantiationException ex ) {
            java.util.logging.Logger.getLogger( JanelaPrincipal.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( IllegalAccessException ex ) {
            java.util.logging.Logger.getLogger( JanelaPrincipal.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( javax.swing.UnsupportedLookAndFeelException ex ) {
            java.util.logging.Logger.getLogger( JanelaPrincipal.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater( new Runnable() {
            @Override
            public void run() {
                new JanelaPrincipal().setVisible( true );
            }
        } );
    }
    
    private void alterarPainelPropriedades( String nomePainel ) {
        ( (CardLayout) painelPropriedades.getLayout() ).show( painelPropriedades, nomePainel );
    }

    private void verificarHistorico() {
        
        if ( painelD.possivelDesfazer() ) {
            btnDesfazer.setEnabled( true );
        } else {
            btnDesfazer.setEnabled( false );
        }
        
        if ( painelD.possivelRefazer() ) {
            btnRefazer.setEnabled( true );
        } else {
            btnRefazer.setEnabled( false );
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnBaldePreenchimento;
    private javax.swing.JButton btnDesfazer;
    private javax.swing.JToggleButton btnElipse;
    private javax.swing.JToggleButton btnEstrela;
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JToggleButton btnLapis;
    private javax.swing.JToggleButton btnLinha;
    private javax.swing.JToggleButton btnMover;
    private javax.swing.JToggleButton btnPoligono;
    private javax.swing.JButton btnRefazer;
    private javax.swing.JToggleButton btnRetangulo;
    private javax.swing.JToggleButton btnRetanguloArredondado;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox chkSemCorPreenchimento;
    private javax.swing.JCheckBox chkSemCorTraco;
    private javax.swing.JLabel lblArcoPEA;
    private javax.swing.JLabel lblEspessuraPE;
    private javax.swing.JLabel lblEspessuraPEA;
    private javax.swing.JLabel lblEspessuraPEL;
    private javax.swing.JLabel lblLadosPEL;
    private javax.swing.JPanel painel;
    private javax.swing.JPanel painelCorFundo;
    private javax.swing.JPanel painelCorPreenchimento;
    private javax.swing.JPanel painelCorTraco;
    private javax.swing.JPanel painelPropriedades;
    private javax.swing.JPanel painelPropriedadesEspessura;
    private javax.swing.JPanel painelPropriedadesEspessuraArco;
    private javax.swing.JPanel painelPropriedadesEspessuraLados;
    private javax.swing.JPanel painelPropriedadesVazio;
    private javax.swing.JToolBar.Separator sep0;
    private javax.swing.JToolBar.Separator sep1;
    private javax.swing.JPanel sep10;
    private javax.swing.JToolBar.Separator sep2;
    private javax.swing.JToolBar.Separator sep3;
    private javax.swing.JToolBar.Separator sep4;
    private javax.swing.JToolBar.Separator sep5;
    private javax.swing.JToolBar.Separator sep6;
    private javax.swing.JToolBar.Separator sep7;
    private javax.swing.JToolBar.Separator sep8;
    private javax.swing.JPanel sep9;
    private javax.swing.JToolBar toolBar;
    private javax.swing.JTextField txtArcoPEA;
    private javax.swing.JTextField txtEspessuraPE;
    private javax.swing.JTextField txtEspessuraPEA;
    private javax.swing.JTextField txtEspessuraPEL;
    private javax.swing.JTextField txtLadosPEL;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
